openapi: 3.0.0
info: 
  title: Survey agregator API
  version: 0.0.2
paths:
  /api/registration:
    post:
      tags:
       - main
      summary: User registration
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequestDto'
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
  
  /api/login:
    post:
      tags:
       - main
      summary: User login
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationResponseDto"
        '401':
          description: Unauthorized
                
  /api/refresh_token:
    post:
      tags:
       - main
      summary: Generate new tokens using refresh token
      parameters:
        - name: token
          in: header
          required: True
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationResponseDto"
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
                
  /api/access_token:
    post:
      tags:
       - main
      summary: Access token check
      parameters:
        - name: token
          in: header
          required: True
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  
  /api/user/profile:
    get:
      tags:
       - user
      summary: User profile
      parameters:
        - name: token
          in: header
          required: True
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileResponse"
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    put:
      tags:
       - user
      summary: Profile update
      parameters:
        - name: token
          in: header
          required: True
          schema:
            type: string
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error


  /api/user/logout:
    delete:
      tags:
       - user
      summary: Logout from account
      parameters:
        - name: token
          in: header
          required: True
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  
  /api/user/create:
    post:
      tags:
       - user
      summary: Create new survey
      parameters:
        - name: token
          in: header
          required: True
          schema:
            type: string
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyFormRequest'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /api/user/survey:
    get:
      tags:
       - user
      summary: Survey by id
      parameters:
        - name: token
          in: header
          required: True
          schema:
            type: string
        - name: id
          in: query
          required: True
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSurveyResponse"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  
  /api/survey:
    get:
      tags:
       - survey
      summary: Survey by id
      parameters:
        - name: id
          in: query
          required: True
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SurveyResponse"
        '404':
          description: Not found
    post:
      tags:
       - survey
      summary: Survey answers send
      parameters:
        - name: id
          in: query
          required: True
          schema:
            type: string
      requestBody:
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
      responses:
        '200':
          description: OK
  
components:
  schemas:
    RegistrationRequestDto:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
          
    LoginRequestDto:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
          
    AuthenticationResponseDto:
      type: object
      required:
        - refreshToken
        - accessToken
      properties:
        refreshToken:
          type: string
        accessToken:
          type: string
          
    UserProfileResponse:
      type: object
      required:
        - email
        - username
        - id
      properties:
        email:
          type: string
        username:
          type: string
        id:
          type: string
        surveys:
          type: array
          items:
            $ref: "#/components/schemas/SurveysInfo"
            
    UserUpdateRequest:
      type: object
      required:
        - oldPassword
        - newPassword
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
            
    SurveysInfo:
      type: object
      required:
        - id
        - title
        - description
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string  
          
    SurveyFormRequest:
      type: object
      required:
        - questions
        - title
        - description
      properties:
        userIds:
          type: array
          items:
            type: string
        questions:
          type: array
          items:
            $ref: "#/components/schemas/QuestionRequest"
        title:
          type: string
        description:
          type: string
        
    QuestionRequest:
      type: object
      required:
        - questionText
        - answers
      properties:
        questionText:
          type: string
        answers:
          type: array
          items:
            type: string
      
    UserSurveyResponse:
      type: object
      required:
        - questions
        - title
        - description
      properties:
        questions:
          type: array
          items:
            $ref: "#/components/schemas/QuestionResponse"
        title:
          type: string
        description:
          type: string
          
    QuestionResponse:
      type: object
      required:
        - questionText
        - answers
      properties:
        questionText:
          type: string
        answers:
          type: array
          items:
            $ref: "#/components/schemas/AnswerResponse"
      
    AnswerResponse:
      type: object
      required:
        - answer
        - quantity
      properties:
        answer:
          type: string
        quantity:
          type: integer
      
    SurveyResponse:
      type: object
      required:
        - questions
        - title
        - description
      properties:
        questions:
          type: array
          items:
            $ref: "#/components/schemas/QuestionResponseSR"
        title:
          type: string
        description:
          type: string
          
    QuestionResponseSR:
      type: object
      required:
        - questionText
        - answers
      properties:
        questionText:
          type: string
        answers:
          type: array
          items:
            $ref: "#/components/schemas/AnswerResponseSR"
      
    AnswerResponseSR:
      type: object
      required:
        - answer
        - id
      properties:
        answer:
          type: string
        id:
          type: string
          
    AnswerRequest:
      type: object
      required:
        - answerIds
      properties:
        answerIds:
          type: array
          items:
            type: string
